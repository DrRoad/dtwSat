language: r

r:
  - release
  - devel

deploy.skip_cleanup: true

sudo: required
dist: trusty
cache:
  - packages
  - ccache
latex: true

r_github_packages:
  - r-lib/covr
  
bioc_packages:
  - Biobase

addons:
  apt:
    sources:
      - sourceline: 'ppa:ubuntugis/ubuntugis-unstable'
    packages:
      - libproj-dev
      - libgeos-dev
      - libspatialite-dev
      - libgdal-dev

before_install:
  - R -q -e 'install.packages("remotes"); remotes::install_github("ropenscilabs/tic"); tic::prepare_all_stages()'
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gdal; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew tap homebrew/core; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew tap brewsci/science; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install install Caskroom/cask/xquartz; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then HOMEBREW_NO_AUTO_UPDATE=1 brew install install r; fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9; fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then echo 'deb http://cran.rstudio.com/bin/linux/ubuntu trusty-cran35/' | sudo tee --append /etc/apt/sources.list; fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update; fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y libgdal-dev libproj-dev r-base r-base-dev; fi
  
#script: 
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo Rscript -e "install.packages(c('devtools'),repos='http://cran.us.r-project.org')"; fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo Rscript -e "devtools::install_github('vwmaus/dtwSat')"; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then Rscript -e "install.packages(c('devtools','lme4','stringr','caret'),repos='http://cran.us.r-project.org')"; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then Rscript -e "devtools::install_github('vwmaus/dtwSat')"; fi

# add codecov 
r_packages:
  - covr

after_success:
  - Rscript -e 'library(covr); codecov()'

after_success:
  - R -q -e 'covr::codecov(quiet = FALSE)'
  
install: R -q -e 'tic::install()'
script: R -q -e 'tic::script()'
before_deploy: R -q -e 'tic::before_deploy()'
deploy:
   provider: script
   script: R -q -e 'tic::deploy()'
   on:
     branch: master
