% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/twdtw.R
\docType{methods}
\name{twdtwApply}
\alias{twdtwApply}
\title{Apply Time-Weighted Dynamic Time Warping alignment to raster}
\usage{
twdtwApply(raster.list, patterns, timeline, doy, breaks = NULL, from = NULL,
  to = NULL, by = NULL, win.fun = NULL, win.size = c(1, 1),
  chunk.overlap, mc.cores = 1, chunk.size, ...)
}
\arguments{
\item{raster.list}{A list of \code{\link[raster]{RasterBrick-class}} or 
\code{\link[raster]{RasterStack-class}}.
Each layer of the \code{\link[raster]{raster}} object is a time step. See Details}

\item{patterns}{a list of \link[zoo]{zoo} objects. See \code{\link[dtwSat]{twdtw}} for
details}

\item{timeline}{A vector of class \code{\link[base]{Dates}}. 
It must have the length of the layers in the \code{\link[raster]{RasterBrick-class}} object}

\item{doy}{A \code{\link[raster]{RasterBrick-class}} or \code{\link[raster]{RasterStack-class}} 
with the same extent as the objects in \code{raster.list}}

\item{breaks}{A vector of class \code{\link[base]{Dates}}}

\item{from}{A character or \code{\link[base]{Dates}} object in the format "yyyy-mm-dd"}

\item{to}{A \code{\link[base]{character}} or \code{\link[base]{Dates}} 
object in the format "yyyy-mm-dd"}

\item{by}{A \code{\link[base]{character}} with the intevals size, \emph{e.g.} ''6 month''}

\item{win.fun}{A function. A function to be applied to the twdtw results. See Details}

\item{win.size}{A numeric vector. The size of a processing window in col x row order.
Default is a single pixel, \emph{i.e.} \code{win.size=c(1,1)}}

\item{chunk.overlap}{A numeric vector. The overlap of neighboring chunks of an 
raster. Overlap is specified for each dimension of the raster col x row. 
Usefull when \code{win.size} bigger than a single pixel. Normally it is the size of 
the window.}

\item{mc.cores}{The number of cores to use, See \code{\link[parallel]{mclapply}} 
for details}

\item{chunk.size}{An integer. Set the number of cells for each block, 
See \code{\link[raster]{blockSize}} for details}

\item{...}{other arguments to pass to the functions \code{\link[dtwSat]{twdtw}} and 
\code{win.fun}. Note that the 'win.fun' should explicitly name the arguments}
}
\value{
A \code{\link[dtwSat]{twdtw-class}} object
}
\description{
This function applies a multidimensional Time-Weighted DTW 
analysis for each pixel time series.
}
\details{
...
}
\examples{
weight.fun = logisticWeight(alpha=-0.1, beta=100, theta=0.5)

# Perform twdtw analysis for a single pixel 
alig = twdtw(x=template, patterns=patterns.list, weight.fun = weight.fun, 
             keep=TRUE)
getPatternNames(alig)
getAlignments(alig)
getMatches(alig)
getInternals(alig)

# Perform twdtw for a list pixel 
#aligs = lapply(X=template, FUN=twdtw, patterns=patterns.list, 
#weight.fun = weight.fun, keep=TRUE)

}
\author{
Victor Maus, \email{vwmaus1@gmail.com}
}
\seealso{
\code{\link[dtwSat]{twdtw}}, 
\code{\link[dtwSat]{classifyIntervals}}
}

