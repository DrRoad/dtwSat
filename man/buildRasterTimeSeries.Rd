% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildRasterTimeSeries.R
\docType{methods}
\name{buildRasterTimeSeries}
\alias{buildRasterTimeSeries}
\title{Build raster time series}
\usage{
buildRasterTimeSeries(..., timeline, doy = NULL, filepath = NULL,
  mc.cores = 1)
}
\arguments{
\item{...}{\code{\link[raster]{RasterBrick-class}} or 
\code{\link[raster]{RasterStack-class}} objects with the 
same spatial and temporal extents. Each layer of the Raster* object is a time step.
\code{...} also accepts other named arguments to pass to the function 
\code{\link[raster]{writeRaster}}.}

\item{timeline}{A \code{\link[base]{Dates}} or \code{\link[base]{character}} 
vector in format "YYYY-MM-DD". It must have the same length as the the layers in 
the Raster* object.}

\item{doy}{A \code{\link[raster]{RasterBrick-class}} or 
\code{\link[raster]{RasterStack-class}} with a sequence of days of the year for each pixel. 
\code{doy} must have the same spatial and temporal extents as the Raster* objects passed to \code{...}.
If \code{doy} is not informed then at least one Raster* object must be passed through \code{...}.}

\item{filepath}{A character. The path to save the raster time series. If informed the 
function saves a raster file for each Raster* object in the list, \emph{i.e} one file 
for each time series. This way the function retrieves an list of 
\code{\link[raster]{RasterBrick-class}}. It is useful when the time series are 
originally stores in separated files. See details.}

\item{mc.cores}{The number of cores to use, See \code{\link[parallel]{mclapply}} 
for details.}
}
\value{
details a list of \code{\link[raster]{RasterBrick-class}} or 
\code{\link[raster]{RasterStack-class}} objects.
}
\description{
This function creates a list of raster time series.
}
\details{
The performance the functions \code{\link[dtwSat]{twdtwApply}} and 
\code{\link[dtwSat]{extractTimeSeries}} is improved if the Raster* objects are connected 
to files with the whole time series for each attribute.
}
\examples{
\dontrun{
#### In this example we build a multi-band MOD13Q1 raster time series. 
#### The 'tif' files in 'lucc_MT/tif' have 999 EVI time series 
#### from 2007-01-01 to 2013-12-19, that means 160 points with temporal 
#### resolution of 16 days. 
data_folder = system.file("lucc_MT/data", package = "dtwSat")
blue = brick(paste(data_folder,"blue.tif", sep = "/"))
red  = brick(paste(data_folder,"red.tif", sep = "/"))
nir  = brick(paste(data_folder,"nir.tif", sep = "/"))
mir  = brick(paste(data_folder,"mir.tif", sep = "/"))
evi  = brick(paste(data_folder,"evi.tif", sep = "/"))
ndvi = brick(paste(data_folder,"ndvi.tif", sep = "/"))
dates = scan(paste(data_folder,"timeline", sep = "/"), what = "dates")
raster_timeseries = 
     buildRasterTimeSeries(blue, red, nir, mir, evi, ndvi, timeline = dates)
 
#### In the next example we extract and plot a multi-band time series from 
#### our raster time series built in the example above. 

## Location and time range 
ts_location = data.frame(longitude = -55.96957, latitude = -12.03864, 
                         from = "2007-09-01", to = "2013-09-01")
 
## Proj string 
crs_string = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"

## Extract time series 
ts = extractTimeSeries(x = raster_timeseries, y = ts_location, 
                       proj4string = crs_string)
 
autoplot(ts[[1]], facets = NULL) + xlab("Time") + ylab("Value")


#### The next example creates the raster time series and saves one file for each 
#### satellite band. This way the function retrieves a rasterBrick object instead 
#### of rasterStack that improves the performance of the raster processing. 
#### It is useful when the time series are originally stores in separated files. 

raster_timeseries = buildRasterTimeSeries(blue, red, nir, mir, evi, ndvi,
                    timeline = dates, filepath = "~/test_fun",
                    format="GTiff", overwrite=TRUE)
}                      
}
\author{
Victor Maus, \email{vwmaus1@gmail.com}
}
\seealso{
\code{\link[dtwSat]{twdtwApply}}, and
\code{\link[dtwSat]{plotLUCC}}.
}

