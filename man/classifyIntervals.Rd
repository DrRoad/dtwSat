% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classifyIntervals.R
\docType{methods}
\name{classifyIntervals}
\alias{classifyIntervals}
\title{Classify time intervals}
\usage{
classifyIntervals(x, y, from = NULL, to = NULL, by = NULL,
  breaks = NULL, overlap = 0.5, threshold = Inf, simplify = FALSE)
}
\arguments{
\item{x}{A \code{\link[dtwSat]{twdtw-class}} object.}

\item{y}{A \link[base]{character} or \link[base]{numeric}
vector with the patterns identification. If not declared the function 
considers all patterns in the classification.}

\item{from}{A character or \code{\link[base]{Dates}} object in the format "yyyy-mm-dd".}

\item{to}{A \code{\link[base]{character}} or \code{\link[base]{Dates}} object in the format "yyyy-mm-dd".}

\item{by}{A \code{\link[base]{character}} with the intevals size, \emph{e.g.} "6 month".}

\item{breaks}{A vector of class \code{\link[base]{Dates}}. This replaces the arguments \code{from},
\code{to}, and \code{by}.}

\item{overlap}{A number between 0 and 1. The minimum overlapping 
between one match and the interval of classification. Default is 0.5, 
\emph{i.e.} an overlap minimum of 50\%.}

\item{threshold}{A number. The TWDTW dissimilarity threshold, i.e. the maximum TWDTW 
cost for consideration in the classification. Default is \code{Inf}.}

\item{simplify}{A logical. TRUE returns a vector with the best pattern for 
each interval. FALSE returns a \code{\link[dtwSat]{twdtw-class}} object. 
Default is FALSE.}
}
\value{
A \code{\link[dtwSat]{twdtw-class}} with the best match 
for each classification period or a vector with the best class 
for each period.
}
\description{
This function retrieves the best match within each 
predefined period based on the TWDTW dissimilarity measure.
}
\examples{

log_fun = logisticWeight(alpha=-0.1, beta=100)

matches = twdtw(x=example_ts, patterns=patterns.list, weight.fun = log_fun)
         
# Classify interval
from = as.Date("2009-09-01")
to = as.Date("2013-09-01")
by = "6 month"

# All classes
class_1 = classifyIntervals(x=matches, from=from, to=to, by = by,
             overlap=.5)

getAlignments(class_1)
plotAlignments(class_1)
plotClassification(class_1)

# Cotton and Maize 
class_2 = classifyIntervals(x=matches, y=c("Cotton","Maize"), 
                 from=from, to=to, by = by, overlap=.5)

getAlignments(class_2)
plotAlignments(class_2)
plotClassification(class_2)

# Simplify Cotton and Maize 
classifyIntervals(x=matches, from=from, to=to, by = by,
             overlap=.5, threshold=Inf, simplify=TRUE)

        
}
\author{
Victor Maus, \email{vwmaus1@gmail.com}
}

